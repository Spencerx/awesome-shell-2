#!/bin/bash

#
# Message module: functions for better display
#

# Messages:
msg(){
    echo -e "$@" >&2
}

# Fatal error:
fatal(){
    msg "❌  Fatal error: $@"
    exit 1
}

# Prints command it runs and then output
debug() {
    msg "Running: $@"
    "$@"
}

header(){
    local HEADER_MSG_CHAR='*'
    local message="$@"
    local num=$((14 + ${#message}))
    local line=$(printf "%0.s$HEADER_MSG_CHAR" $(seq 1 $num))
    msg "$line"
    msg "$HEADER_MSG_CHAR$HEADER_MSG_CHAR     $message     $HEADER_MSG_CHAR$HEADER_MSG_CHAR"
    msg "$line\n"
}


# Print last command return status:
verbose_exit_code(){
    exit_code=$?
    if [ $exit_code -eq 0 ]; then
        msg "$@ ✅  Ok"
    else
        msg "$@ ❌  Failed"
    fi;
    return $exit_code
}

# Terminate with fatal error if commod returns any error
fatal_if_any_error(){
    if [ $? -ne 0 ]; then
        fatal "$@"
    fi;
}

# Short-cut to check for required script/executable, that should reachable through the PATH
required_utility(){
    which -s "$@" 1>/dev/null 2>&1
    fatal_if_any_error "Was not able to find required '$@' utility in the PATH"
}
